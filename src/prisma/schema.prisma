// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_PRISMA_URL") // uses connection pooling
  directUrl = env("DATABASE_URL_NON_POOLING") // uses a direct connection
}

model User {
  id              String        @id @default(uuid())
  name            String
  tournaments     Tournament[]  @relation("Creator")
  wonTournaments  Tournament[]  @relation("Winner")
  participatingIn Participant[]
  credits         Credit[]
}

model Credit {
  id            String   @id @default(uuid())
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  experienceIds String[]
  createdAt     DateTime @default(now())
}

model Participant {
  id           String     @id @default(uuid())
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  tournament   Tournament @relation(fields: [tournamentId], references: [id], onDelete: Cascade)
  tournamentId String
}

model Tournament {
  id            String           @id @default(uuid())
  user          User             @relation("Creator", fields: [userId], references: [id])
  userId        String
  description   String
  date          DateTime
  experienceIds String[]
  prize         String
  location      String
  winner        User?            @relation("Winner", fields: [winnerId], references: [id])
  winnerId      String?
  status        TournamentStatus @default(DRAFT)
  createdAt     DateTime         @default(now())
  participants  Participant[]
}

enum TournamentStatus {
  DRAFT
  ACTIVE
  CANCELLED
  COMPLETED
}
